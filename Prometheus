O Prometheus é um aplicativo de software gratuito usado para monitoramento e alerta de eventos. 
Ele grava métricas em tempo real em um banco de dados de séries temporais criado usando um modelo de recepção HTTP,
com consultas flexíveis e alertas em tempo real.

<dependency>
    <groupId>io.micrometer</groupId>
    <artifactId>micrometer-registry-prometheus</artifactId>
</dependency>

e habilite o endpoint /actuator/prometheus, por isso adione em Application.Properties

management.endpoints.web.exposure.include=info,health,prometheus.

Sabendo o que é Name(nome da métrica) e label (diferencia as características da métrica, os dados abaixo indicam
que a métrica vem do serviço de proposta e do ambiente de desenvolvimento.

management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}


Importante: Cuidado com a quantidade de LABELs, pois a medida que aumentam, aumentam também os dados armazenados 
no Prometheus, causando problemas de performance e disco.

###################################################################################################

O Prometheus é um sistema de monitoramento de código aberto baseado em métricas.
Ele possui um modelo de dados simples, porém poderoso, e uma linguagem de consulta que permite analisar o desempenho
de seus aplicativos e infraestrutura. Ele não tenta resolver problemas fora do espaço das métricas, deixando-os para
outras ferramentas mais apropriadas.

- Funcionalidades:
- PromQL, uma linguagem de consulta flexível para efetuar consultas.
- Coleta de métricas ocorre por meio de um modelo pull sobre HTTP.
- Receber métricas é suportado através de um gateway intermediário.

 Existem dois modelos de coleta de métricas:

- Pull model - é o mais utilizado pelo mercado, pois o Prometheus tem a responsabilidade de coletar as métricas de
acordo com os endereços configurados em seu arquivo de configuração, ou seja, se você configurou para ele coletar
as métricas do endereço www.prd-servico-proposta.com.br/actuator/prometheus a cada 5s o mesmo fará!
Com este modelo a sua aplicação não tem a responsabilidade de enviar as métricas e sim de apenas fornecer no formato
Prometheus e certamente o mesmo (Prometheus) irá coletar!


- Push model
O modelo push model é o menos utilizado, pois ele atende um cenário muito específico, como por exemplos operações
de curta duração, como uma Tarefa, Função(Serverless), etc.
Como essas operações duram pouco, seus endereços mudam bastante e fica inviável do Prometheus gerenciar isso,
portanto a responsabilidade de enviar as métricas são da aplicação (operação de curta duração).
Para atender esse cenário o Prometheus provê uma API para receber essas métricas!

###############################################################

Configurando a aplicação no Prometheus

- Acessando Prometheus pela primeira vez
O Prometheus é uma ferramenta bastante importante em ambientes de aplicações
distribuídas, pois nos ajuda a realizar a coleta de métricas dos nossos serviços
de maneira bastante aderente aos padrões de computação na nuvem.

Para usar, é necessário subir uma instância para que nossas métricas possam 
ser coletadas.
Vale lembrar, que estamos rodando em ambiente de desenvolvimento, quando estamos
em ambiente produtivo, precisamos de provavelmente mais de uma instância para
garantir alta disponibilidade e resiliência.
A tela do Prometheus é realmente pobrezinha, pois é apenas uma ferramenta de 
monitoramento. 
Temos menus importantes para checar as configurações do prometheus, as configurações
relacionadas ao sistema estão no menu Status. O Prometheus também conta com um sistema
de alertas que pode ser instalado junto a solução, as configurações de alertas estão
no menu Alertas, para isso o módulo deve ser instalado.
Outra parte importante na parte central da tela, é o combo para seleção das métricas,
neste combo todas as métricas que os sistemas conectados ao prometheus estão listadas.
É importante trabalhar com bastante rigor nas nomenclaturas das métricas. 

- Menu Status
O menu status é um menu que conta com diversos sub-menus relacionados a configuração
do prometheus, podemos encontrar a versão do sistema, configurações de runtime, os
parâmetros de inicialização das ferramentas, entre outras informações.

Pontos bastante importante relacionados à coleta de métricas são Targets e Service Discovery,
estes são relacionados a como o prometheus está operando em relação a obtenção dos
valores das métricas.
 
 
- Targets
Targets são alvos, no nosso contexto são os nossos sistemas que estão configurados
para que o prometheus faça a coleta das métricas. Essas configurações são realizadas
através do arquivo de configuração são realizadas através do arquivo de configuração
prometheus.yaml, mas este pode ser um trabalho de infra, portanto é necessário apenas
entender que precisamos avisar o prometheus que ele precisa buscar métricas.

A tela targets nos ajuda bastante a entender como estão nossos sistemas em relação
às coletas, ela mostra se o endpoint de coleta está ok, e podemos ver informações da
última coleta e quanto tempo demorou. 
Quando há erro, também conseguimos identificar o motivo.

A tela target costuma salvar! 

########################################################################

Service Discovery
É a maneira que o prometheus vai usar para descobrir seus serviços.
No nosso ambiente de desenvolvimento informamos os serviços arbitrariamente,
mas imagine quando nossos sistemas tiverem dezenas de instâncias ou talvez
milhares, já pensou em cada nova instância tivermos que informar o prometheus,
esta tarefa, se tornaria inviável. Para isso, o prometheus é capaz de se 
conectar com implementações de service discovery mais usadas no mercado 
como kubernetes e Consul, por exemplo.
Essas implementações são capazes de fornecer informações das instâncias para
o prometheus.
Olhando a tela, você verá que o prometheus é capaz de agrupar nossos targets
por nomes, e ainda mais consegue contá-los, isso é muito útil quando contamos
com algumas instâncias de um mesmo serviço. 
Também é possível saber como eles foram descobertos.
Ele consegue mostrar as labels descobertas e as labels do "alvo".

################################################################

Consultando uma métrica
Na home do prometheus, escolha uma métrica qualquer e depois clique na tab Graph.
Cada linha de log é um evento!
Por não conseguir juntar métricas com o Prometheus, entra em cena o Grafana, que
é uma ferramenta feita para renderizar gráficos e adivinha, ele tem uma fortíssima 
integração com o prometheus.




















