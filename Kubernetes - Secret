Quando precisamos armazenar informações sensíveis e de forma segura, precisamos utilizar uma
primitiva denominada Secrets.
Essa primitiva permite que consigamos armazenar informações sensíveis como senhas, tokens, 
chaves SSH, etc.

Declarar um arquivo de configuração de um Secret
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
type: Opaque
data:
  username: YWRtaW4=
  password: YWRtaW5AMjYtMjAwLTAtQEA=
  
  Você pode salvar um arquivo com qualquer nome com extensão .yaml e então ele está apto à ser 
  declarado no Kubernetes!
  
  Note que temos um nó data, qualquer entrada desse nó pode se tornar uma variável de ambiente a
  ser injetada no Pod que for utilizá-la. Dessa maneira se tivermos um sistema que utilize a
  variável de ambiente username ela será preenchida com o valor aberto em Base64.
  
- Para criar a Secret no Kubernetes, precisamos executar o seguinte comando:
$ kubectl apply -f <NOME DO SEU ARQUIVO>.yaml -n <NAMESPACE>

-Associando Secret ao PODs
Uma vez que declaramos nossas variáveis de ambiente no Secret, podemos utilizá-la em nossos PODs,
onde efetivamente rodam nossas aplicações. Para fazer isso devemos adicionar a seguinte 
configuração no arquivo de configuração de deployments, conforme exemplo abaixo:

## restante omitido
spec:
  containers:
    - image: zupacademy/proposta
      imagePullPolicy: Always
      env:
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: username
## restante omitido
A associação acontece pela configuração do nó valueFrom perceba que referenciamos o Secret pelo
atributo secretKeyRef.

  
  
  
  
  



