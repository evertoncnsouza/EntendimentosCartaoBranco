Ambiente distribuído - Quando pensamos em ambiente distribuído, nossas aplicações precisam ser auto-contidas, 
que é expor serviços via HTTP, ou porta de serviço web. Isso faz com que a aplicação 
seja escalavel usando o modelo "escalabilidade horizontar", adicionando novas instâncias
desses serviços.

Aplicação distribuída reagem de maneira eficiente com aumento de carga e conseguem "ficarem prontas"
de maneira rápida, adicionando novas instâncias ao pool de instâncias que atendem as requisições.

O Twelve Factor, garante que nossa aplicação seja portável e rode eficientemente em ambientes
cloud.

Para rodar a aplicação: 

<plugin>
  <groupId>org.springframework.boot</groupId>
  <artifactId>spring-boot-maven-plugin</artifactId>
</plugin>


#########################################################

Ver Twelve Factor- Dependências!

########################################################

Nossas aplicações são construídas para gerenciar alguns estados, como por exemplo a proposta,
de uma maneira geral esse estado deve ser persistido/armazenado em uma outra fonte de dados,
no Twelve Factor chamado de Backing Services.
A preocuparação é refente aos estados temporários que estão armazenados por exemplo na memória,
perceba que se nossa aplicação morrer, inevitavelmente vamos perder esses dados, de maneira 
que outra instância  da nossa aplicação não consegue "continuar" o trabalho.

Por exemplo, tudo bem se armazenarmos nossa lista de propostas em um banco de dados, 
perceba que nossa aplicação ainda se mantém stateless porque o estado não esta nela,
todo o estado está armazenado no banco de dados.

Ver Twelve Factor - Processos

